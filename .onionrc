#!/usr/bin/env sh
# shellcheck disable=SC2034

## DESCRIPTION
## This file is the configuration for the tor menus and scripts.
## It contains functions which are used in several scripts.
## Hopefully, this way the scripts stay short and clear.
## Path for folders variables must not contain "/" at the end.
##
## SYNTAX
##  . .onionrc
##
## ADAPT
## For this, use 'sed', with '|' as delimiter and escape quoted variables with '\"', -i'' for compatibility.
## sed -i'' "s|VAR=.*|VAR=\"something\"|" .onionrc
##
###########################
######## VARIABLES ########

## [ EDIT REQUIRED ] (IF NOT DEBIAN)
TOR_USER="debian-tor" ## [debian-tor|tor]
TOR_SERVICE="tor@default.service" ## [tor@default.service|tor.service]
PKG_MANAGER_INSTALL="sudo apt install -y" ## always use the 'yes' flag to be non interactive
WEBSERVER="nginx" ## [nginx|apache2]
REQUIREMENTS="tor grep sed openssl basez git qrencode pandoc lynx gzip tar dialog python3-stem ${WEBSERVER}"

## [ EDIT OPTIONAL ]
WEBSITE_DIR="/var/www"
## Vanguards - https://github.com/mikeperry-tor/vanguards/commits/master
VANGUARDS_COMMIT_HASH="10942de"
## Dialog
DIALOGRC="${ONIONSERVICE_PWD}/.dialogrc"
## Backup
SCP_TARGET_USER="remoteUser"
SCP_TARGET_IP="remoteIp"
SCP_TARGET_PATH="/home/${SCP_TARGET_USER}/remote/path"
SCP_TARGET_FULL="${SCP_TARGET_USER}@${SCP_TARGET_IP}:${SCP_TARGET_PATH}" ## '[USER]@[SERVER]:[SERVER_DIR]'
HS_BK_DIR="${HOME}/tor-hs-backup"
LOCAL_DOWNLOAD_PATH="${HOME}/tor-hs-backup"
LOCAL_IP=$(hostname -I | cut -d " " -f1) ## There is no posix way of handling network interfaces
## tor defaults
TORRC_ROOT="/etc/tor"
TORRC="${TORRC_ROOT}/torrc"
DATA_DIR="/var/lib/tor"
DATA_DIR_SERVICES="${DATA_DIR}/services"
DATA_DIR_AUTH="${DATA_DIR}/onion_auth"
CONTROL_PORT="9051"

## [ TODO ] ## expectation is to automate onion-auth inclusion, but would  have to be more usable than the browser gui version
BROWSER_HOME="${HOME}/.local/share/torbrowser/tbb/$(uname -m)/tor-browser_${LANG%.*}" ## this is where https://github.com/micahflee/torbrowser-launcher saves it
BROWSER_DATA_DIR="${BROWSER_HOME}/Browser/TorBrowser/Data/Tor"
BROWSER_TORRC="${BROWSER_DATA_DIR}/torrc"
BROWSER_DATA_DIR_AUTH="${BROWSER_DATA_DIR}/onion-auth"

## [ COLORS ]
BOLD="1" ## [0|1]
BOLD="${BOLD:-0}" ## If BOLD is empty or unset, don't use bold
NOCOLOR="\033[0m"
WHITE="\033[${BOLD};97m"
BLACK="\033[${BOLD};30m"
RED="\033[${BOLD};31m"
GREEN="\033[${BOLD};32m"
YELLOW="\033[${BOLD};33m"
BLUE="\033[${BOLD};34m"
MAGENTA="\033[${BOLD};35m"
CYAN="\033[${BOLD};36m"


###########################
######## FUNCTIONS ########

## install space separated list of packages (e.g.: install_package tor openssl git)
#command -v "${PACKAGE}"
#type "${PACKAGE}"
install_package(){
  for PACKAGE in "${@}"; do
    command -v "${PACKAGE}" >/dev/null || ${PKG_MANAGER_INSTALL} "${PACKAGE}"
  done
}

is_service_dir_empty(){
  [ "$(sudo -u "${TOR_USER}" ls "${DATA_DIR_SERVICES}"/)" = "" ] && error_msg "Onion services directory is empty. Create a service first before running this command again."
}


## set correct permissions for tor directories and files
set_owner_permission(){
  sudo chown -R "${TOR_USER}:${TOR_USER}" "${DATA_DIR}"
  sudo chmod 700 "${DATA_DIR}"

  sudo chown -R root:root "${TORRC_ROOT}"
  sudo chmod 755 "${TORRC_ROOT}"
  sudo chmod 644 "${TORRC}"
}


# This function reload tor by default or forces to restart
restarting_tor()
{
  set_owner_permission
  if [ "${1}" = "force" ]; then
    printf "\n# Restarting tor, please be patient.\n"
    printf "# Getting stuck after several minutes? Press Ctrl-C\n"
    printf "# and to restore the lastest torrc backup run:\n"
    printf "$ onionservice-cli setup torrc\n"
    sudo systemctl restart "${TOR_SERVICE}"
    printf %s"${GREEN}# Restarted tor succesfully!\n${NOCOLOR}"
  elif [ -z "${1}" ]; then
    printf "\n# Reloading tor if active else will restart tor, please be patient.\n"
    printf "# Getting stuck after several minutes? Press Ctrl-C\n"
    printf "# and to restore the lastest torrc backup run:\n"
    printf "$ onionservice-cli setup torrc\n"
    sudo systemctl reload-or-restart "${TOR_SERVICE}"
    printf %s"${GREEN}# Reloaded tor succesfully!\n${NOCOLOR}"
  fi
}
